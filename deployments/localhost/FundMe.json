{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundMe",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5ca1446277d93471747e75e460060dc98464283b5f51eccb24dfaca34375c7b7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "955286",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x28f70eb9cf6dc9fbb8ca9a3300863672205f9f64e2bd960f4e98da209f2ab37f",
    "transactionHash": "0x5ca1446277d93471747e75e460060dc98464283b5f51eccb24dfaca34375c7b7",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "955286",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e1743d1c5778f6a44be5df6d88f29d09",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    AggregatorV3Interface public priceFeed;\\n\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    function fundMe() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fundMe();\\n    }\\n\\n    receive() external payable {\\n        fundMe();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xac67d51c415caf3ca2e00751113cca9d71dada4e59aeeed0627d7a322deb3b57\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface _priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        // );\\r\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface _priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(_priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb79464fac0b54a418516698db74960d617cbf3c91e414261bb23f8f9cd786072\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010e8380380620010e8833981810160405281019062000037919062000129565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610f7d806200016b6000396000f3fe60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b6a324e014610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba919061083e565b60405180910390f35b6100cb6103b1565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108bc565b6105f4565b604051610101919061083e565b60405180910390f35b34801561011657600080fd5b5061011f61060c565b60405161012c919061083e565b60405180910390f35b34801561014157600080fd5b5061014a610619565b6040516101579190610948565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f61063d565b60405161018c9190610972565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109b9565b610663565b6040516101c99190610972565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a290919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610a43565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a92565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190610afd565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610438576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104e45760006002828154811061045e5761045d610b2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104dc90610b59565b91505061043b565b50600067ffffffffffffffff811115610500576104ff610ba2565b5b60405190808252806020026020018201604052801561052e5781602001602082028036833780820191505090505b506002908051906020019061054492919061077e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056b90610c02565b60006040518083038185875af1925050503d80600081146105a8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ad565b606091505b50509050806105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890610c63565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061067357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ae836106de565b90506000670de0b6b3a764000085836106c79190610c83565b6106d19190610d0c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072757600080fd5b505afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190610db5565b5050509150506402540be400816107769190610e30565b915050919050565b8280548282559060005260206000209081019282156107f7579160200282015b828111156107f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079e565b5b5090506108049190610808565b5090565b5b80821115610821576000816000905550600101610809565b5090565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108898261085e565b9050919050565b6108998161087e565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610859565b5b60006108e0848285016108a7565b91505092915050565b6000819050919050565b600061090e6109096109048461085e565b6108e9565b61085e565b9050919050565b6000610920826108f3565b9050919050565b600061093282610915565b9050919050565b61094281610927565b82525050565b600060208201905061095d6000830184610939565b92915050565b61096c8161087e565b82525050565b60006020820190506109876000830184610963565b92915050565b61099681610825565b81146109a157600080fd5b50565b6000813590506109b38161098d565b92915050565b6000602082840312156109cf576109ce610859565b5b60006109dd848285016109a4565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2d601b836109e6565b9150610a38826109f7565b602082019050919050565b60006020820190508181036000830152610a5c81610a20565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9d82610825565b9150610aa883610825565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610add57610adc610a63565b5b828201905092915050565b600081519050610af78161098d565b92915050565b600060208284031215610b1357610b12610859565b5b6000610b2184828501610ae8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6482610825565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9757610b96610a63565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bec600083610bd1565b9150610bf782610bdc565b600082019050919050565b6000610c0d82610bdf565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4d600b836109e6565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b6000610c8e82610825565b9150610c9983610825565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd257610cd1610a63565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1782610825565b9150610d2283610825565b925082610d3257610d31610cdd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5c81610d3d565b8114610d6757600080fd5b50565b600081519050610d7981610d53565b92915050565b6000819050919050565b610d9281610d7f565b8114610d9d57600080fd5b50565b600081519050610daf81610d89565b92915050565b600080600080600060a08688031215610dd157610dd0610859565b5b6000610ddf88828901610d6a565b9550506020610df088828901610da0565b9450506040610e0188828901610ae8565b9350506060610e1288828901610ae8565b9250506080610e2388828901610d6a565b9150509295509295909350565b6000610e3b82610d7f565b9150610e4683610d7f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8557610e84610a63565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec257610ec1610a63565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eff57610efe610a63565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3c57610f3b610a63565b5b82820290509291505056fea26469706673582212208715f2d73af35b0b3aaddd47ff66de149a302e979b834f0174631ea0989ca9b864736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063741bef1a1161004e578063741bef1a14610135578063b6a324e014610160578063dba6335f1461016a578063dc0d3dff146101955761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100cd5780636b69a5921461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100ad61030b565b6040516100ba919061083e565b60405180910390f35b6100cb6103b1565b005b3480156100d957600080fd5b506100f460048036038101906100ef91906108bc565b6105f4565b604051610101919061083e565b60405180910390f35b34801561011657600080fd5b5061011f61060c565b60405161012c919061083e565b60405180910390f35b34801561014157600080fd5b5061014a610619565b6040516101579190610948565b60405180910390f35b6101686101d2565b005b34801561017657600080fd5b5061017f61063d565b60405161018c9190610972565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b791906109b9565b610663565b6040516101c99190610972565b60405180910390f35b6802b5e3af16b188000061020f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a290919063ffffffff16565b1015610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610a43565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029f9190610a92565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561037457600080fd5b505afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190610afd565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610438576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104e45760006002828154811061045e5761045d610b2a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104dc90610b59565b91505061043b565b50600067ffffffffffffffff811115610500576104ff610ba2565b5b60405190808252806020026020018201604052801561052e5781602001602082028036833780820191505090505b506002908051906020019061054492919061077e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161056b90610c02565b60006040518083038185875af1925050503d80600081146105a8576040519150601f19603f3d011682016040523d82523d6000602084013e6105ad565b606091505b50509050806105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890610c63565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061067357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106ae836106de565b90506000670de0b6b3a764000085836106c79190610c83565b6106d19190610d0c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072757600080fd5b505afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190610db5565b5050509150506402540be400816107769190610e30565b915050919050565b8280548282559060005260206000209081019282156107f7579160200282015b828111156107f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079e565b5b5090506108049190610808565b5090565b5b80821115610821576000816000905550600101610809565b5090565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108898261085e565b9050919050565b6108998161087e565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610859565b5b60006108e0848285016108a7565b91505092915050565b6000819050919050565b600061090e6109096109048461085e565b6108e9565b61085e565b9050919050565b6000610920826108f3565b9050919050565b600061093282610915565b9050919050565b61094281610927565b82525050565b600060208201905061095d6000830184610939565b92915050565b61096c8161087e565b82525050565b60006020820190506109876000830184610963565b92915050565b61099681610825565b81146109a157600080fd5b50565b6000813590506109b38161098d565b92915050565b6000602082840312156109cf576109ce610859565b5b60006109dd848285016109a4565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a2d601b836109e6565b9150610a38826109f7565b602082019050919050565b60006020820190508181036000830152610a5c81610a20565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9d82610825565b9150610aa883610825565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610add57610adc610a63565b5b828201905092915050565b600081519050610af78161098d565b92915050565b600060208284031215610b1357610b12610859565b5b6000610b2184828501610ae8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6482610825565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9757610b96610a63565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bec600083610bd1565b9150610bf782610bdc565b600082019050919050565b6000610c0d82610bdf565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c4d600b836109e6565b9150610c5882610c17565b602082019050919050565b60006020820190508181036000830152610c7c81610c40565b9050919050565b6000610c8e82610825565b9150610c9983610825565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd257610cd1610a63565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1782610825565b9150610d2283610825565b925082610d3257610d31610cdd565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d5c81610d3d565b8114610d6757600080fd5b50565b600081519050610d7981610d53565b92915050565b6000819050919050565b610d9281610d7f565b8114610d9d57600080fd5b50565b600081519050610daf81610d89565b92915050565b600080600080600060a08688031215610dd157610dd0610859565b5b6000610ddf88828901610d6a565b9550506020610df088828901610da0565b9450506040610e0188828901610ae8565b9350506060610e1288828901610ae8565b9250506080610e2388828901610d6a565b9150509295509295909350565b6000610e3b82610d7f565b9150610e4683610d7f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8557610e84610a63565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec257610ec1610a63565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eff57610efe610a63565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f3c57610f3b610a63565b5b82820290509291505056fea26469706673582212208715f2d73af35b0b3aaddd47ff66de149a302e979b834f0174631ea0989ca9b864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}